window.crutch={},function(){const e={isEMail:e=>{return/^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/.test(e)},isNumber:e=>{return/^\d+$/.test(e)},isNotEmpty:e=>!!e};crutch.validation=e}(),function(){let e={};e.toggleToActiveLink=(e=>{let t=document.querySelectorAll(".nav__link"),n=e.dataset.link;for(i=0;i<t.length;i++)t[i].classList.contains("nav__link--active")&&t[i].classList.remove("nav__link--active");e.classList.add("nav__link--active"),function(e){var t=document.querySelector("."+e).getBoundingClientRect().top;let n=setInterval(function(){let e=t/30;e>window.pageYOffset-t&&window.innerHeight+window.pageYOffset<document.body.offsetHeight?window.scrollBy(0,e):(window.scrollTo(0,t),clearInterval(n))},10)}(n)}),crutch.navigation=e}(),function(){let e={};const t=document.querySelector(".form-container");let n=null;function o(t){e.close(),n.removeEventListener("click",o)}e.open=(()=>{t.classList.remove("is-hidden"),(n=document.querySelector(".form__close-button")).addEventListener("click",o)}),e.close=(()=>{t.classList.add("is-hidden")}),e.isValid=(()=>{let t=document.querySelectorAll('[data-valid = "required"]'),n=document.querySelector("[data-email]").value,o=document.querySelector("[data-number]").value;return e.isAllComleted(t)?crutch.validation.isEMail(n)?!!crutch.validation.isNumber(o)||(console.log("Неправильно указан телефон"),!1):(console.log("Неверный email"),!1):(console.log("Заполните, пожалуйста, все поля"),!1)}),e.isAllComleted=(e=>{let t=!0;for(i=0;i<e.length;i++)if(!crutch.validation.isNotEmpty(e[i].value)){t=!1;break}return t}),crutch.form=e}(),function(){const e=document.querySelector(".arrow-down"),t=document.querySelector(".form"),n=document.querySelector(".nav");e&&e.addEventListener("click",e=>{e.preventDefault(),crutch.form.open()}),t&&t.addEventListener("submit",function(e){e.preventDefault(),crutch.form.isValid()?console.log("All good"):console.log("Is not valid")}),n&&n.addEventListener("click",e=>{let t=e.target;"a"===t.tagName.toLowerCase()&&(e.preventDefault(),crutch.navigation.toggleToActiveLink(t))})}();
//# sourceMappingURL=data:application/json;charset=utf8;base64,
